apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hive-server
  labels:
    app: hive
    hive: server
{{- block "extraMetadata" . }}
{{- end }}
spec:
  serviceName: hive-server
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: hive
      hive: server
{{- if .Values.spec.hive.labels }}
{{ toYaml .Values.spec.hive.labels | indent 6 }}
{{- end }}
  template:
    metadata:
      labels:
        app: hive
        hive: server
{{- if .Values.spec.hive.labels }}
{{ toYaml .Values.spec.hive.labels | indent 8 }}
{{- end }}
      annotations:
        hive-configmap-hash: {{ include (print $.Template.BasePath "/hive-configmap.yaml") . | sha256sum }}
        hive-scripts-hash: {{ include (print $.Template.BasePath "/hive-scripts-configmap.yaml") . | sha256sum }}
        presto-aws-credentials-secret-hash: {{ include (print $.Template.BasePath "/presto-aws-credentials-secret.yaml") . | sha256sum }}
{{- if .Values.spec.hive.annotations }}
{{ toYaml .Values.spec.hive.annotations | indent 8 }}
{{- end }}
    spec:
      securityContext:
{{ toYaml .Values.spec.hive.securityContext | indent 8 }}
{{- if .Values.spec.hive.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.spec.hive.server.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.spec.hive.server.tolerations }}
      tolerations:
{{ toYaml .Values.spec.hive.server.tolerations | indent 8 }}
{{- end }}
{{- if .Values.spec.hive.server.affinity }}
      affinity:
{{ toYaml .Values.spec.hive.server.affinity | indent 8 }}
{{- end }}
      containers:
      - name: hiveserver2
        command: ["/hive-scripts/entrypoint.sh"]
        args: ["/opt/hive/bin/hive", "--service", "hiveserver2"]
        image: "{{ .Values.spec.hive.image.repository }}:{{ .Values.spec.hive.image.tag }}"
        imagePullPolicy: {{ .Values.spec.hive.image.pullPolicy }}
        ports:
        - name: thrift
          containerPort: 10000
          protocol: TCP
        - name: ui
          containerPort: 10002
          protocol: TCP
{{- if .Values.spec.hive.server.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.spec.hive.server.readinessProbe | indent 10 }}
{{- end }}
{{- if .Values.spec.hive.server.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.spec.hive.server.livenessProbe | indent 10 }}
{{- end }}
        terminationMessagePath: /dev/termination-log
        env:
        - name: HIVE_LOGLEVEL
          value: {{ upper .Values.spec.hive.server.config.logLevel | quote}}
        - name: JAVA_MAX_MEM_RATIO
          value: "{{ .Values.spec.hive.server.config.percentMemoryLimitAsHeap }}"
          optional: true
{{ include "hive-env" . | indent 8 }}
        - name: MY_MEM_REQUEST
          valueFrom:
            resourceFieldRef:
              containerName: hiveserver2
              resource: requests.memory
        - name: MY_MEM_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: hiveserver2
              resource: limits.memory
        volumeMounts:
        - name: hive-config
          mountPath: /hive-config
        - name: hive-scripts
          mountPath: /hive-scripts
{{- if .Values.spec.hive.config.useHdfsConfigMap }}
        - name: hdfs-config
          mountPath: /hadoop-config
{{- end}}
        - name: hive-home-conf
          mountPath: /opt/hive/conf
        # openshift requires volumeMounts for VOLUMEs in a Dockerfile
        - name: hive-metastore-db-data
          mountPath: /var/lib/hive
        - name: namenode-empty
          mountPath: /hadoop/dfs/name
        - name: datanode-empty
          mountPath: /hadoop/dfs/data
{{- if .Values.spec.config.sharedVolume.enabled }}
        - name: hive-warehouse-data
          mountPath: {{ .Values.spec.config.sharedVolume.mountPath }}
{{- end }}
{{- if or (not .Values.spec.config.sharedVolume.enabled) (and .Values.spec.config.sharedVolume.enabled (ne .Values.spec.config.sharedVolume.mountPath "/user/hive/warehouse") ) }}
        - name: hive-warehouse-empty
          mountPath: /user/hive/warehouse
{{- end }}
        resources:
{{ toYaml .Values.spec.hive.server.resources | indent 10 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.spec.hive.terminationGracePeriodSeconds }}
      serviceAccount: hive
{{- if .Values.spec.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.spec.imagePullSecrets | indent 8 }}
{{- end }}
      volumes:
      - name: hive-config
        configMap:
          name: hive-config
      - name: hive-scripts
        configMap:
          name: hive-scripts
          defaultMode: 0555
{{- if .Values.spec.hive.config.useHdfsConfigMap }}
      - name: hdfs-config
        configMap:
          name: {{ .Values.spec.hive.config.hdfsConfigMapName }}
{{- end }}
      - name: hive-home-conf
        emptyDir: {}
      # these emptyDir volumes are necessary because Openshift requires VOLUMEs
      # in a Dockerfile have a corresponding volumeMount
      - name: hive-warehouse-empty
        emptyDir: {}
      - name: namenode-empty
        emptyDir: {}
      - name: datanode-empty
        emptyDir: {}
      - name: hive-metastore-db-data
        emptyDir: {}
      - name: hadoop-logs
        emptyDir: {}
{{- if .Values.spec.config.sharedVolume.enabled }}
      - name: hive-warehouse-data
        persistentVolumeClaim:
          claimName: {{ .Values.spec.config.sharedVolume.persistentVolumeClaimName }}
{{- end}}
